{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eashvee\\\\OneDrive - Ericsson\\\\Ashok\\\\EO\\\\Innovation\\\\ai-chatbot\\\\src\\\\Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Chatbot.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbot = () => {\n  _s();\n  const [input, setInput] = useState('');\n  const [messages, setMessages] = useState([]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Display user message\n    setMessages([...messages, {\n      text: input,\n      from: 'user'\n    }]);\n\n    // Send input to the backend API\n    try {\n      const response = await fetch('http://127.0.0.1:8000/predict', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          input: parseFloat(input)\n        })\n      });\n      const data = await response.json();\n      // Display AI response\n      setMessages([...messages, {\n        text: input,\n        from: 'user'\n      }, {\n        text: data.prediction,\n        from: 'bot'\n      }]);\n    } catch (error) {\n      console.error('Error:', error);\n    }\n    setInput('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-box\",\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: message.from === 'user' ? 'user-message' : 'bot-message',\n        children: message.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        placeholder: \"Type a number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n_s(Chatbot, \"Xhz1M2btVGAzY17pd7+8a34J2bk=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Chatbot","_s","input","setInput","messages","setMessages","handleSubmit","e","preventDefault","text","from","response","fetch","method","headers","body","JSON","stringify","parseFloat","data","json","prediction","error","console","children","className","map","message","index","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/eashvee/OneDrive - Ericsson/Ashok/EO/Innovation/ai-chatbot/src/Chatbot.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './Chatbot.css';\r\n\r\nconst Chatbot = () => {\r\n    const [input, setInput] = useState('');\r\n    const [messages, setMessages] = useState([]);\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        // Display user message\r\n        setMessages([...messages, { text: input, from: 'user' }]);\r\n\r\n        // Send input to the backend API\r\n        try {\r\n            const response = await fetch('http://127.0.0.1:8000/predict', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ input: parseFloat(input) }),\r\n            });\r\n            const data = await response.json();\r\n            // Display AI response\r\n            setMessages([...messages, { text: input, from: 'user' }, { text: data.prediction, from: 'bot' }]);\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n        }\r\n\r\n        setInput('');\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"chat-box\">\r\n                {messages.map((message, index) => (\r\n                    <div key={index} className={message.from === 'user' ? 'user-message' : 'bot-message'}>\r\n                        {message.text}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            <form onSubmit={handleSubmit}>\r\n                <input\r\n                    type=\"number\"\r\n                    value={input}\r\n                    onChange={(e) => setInput(e.target.value)}\r\n                    placeholder=\"Type a number\"\r\n                />\r\n                <button type=\"submit\">Send</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Chatbot;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMS,YAAY,GAAG,MAAOC,CAAC,IAAK;IAC9BA,CAAC,CAACC,cAAc,CAAC,CAAC;;IAElB;IACAH,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAE;MAAEK,IAAI,EAAEP,KAAK;MAAEQ,IAAI,EAAE;IAAO,CAAC,CAAC,CAAC;;IAEzD;IACA,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,EAAE;QAC1DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEf,KAAK,EAAEgB,UAAU,CAAChB,KAAK;QAAE,CAAC;MACrD,CAAC,CAAC;MACF,MAAMiB,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;MAClC;MACAf,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAE;QAAEK,IAAI,EAAEP,KAAK;QAAEQ,IAAI,EAAE;MAAO,CAAC,EAAE;QAAED,IAAI,EAAEU,IAAI,CAACE,UAAU;QAAEX,IAAI,EAAE;MAAM,CAAC,CAAC,CAAC;IACrG,CAAC,CAAC,OAAOY,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAClC;IAEAnB,QAAQ,CAAC,EAAE,CAAC;EAChB,CAAC;EAED,oBACIJ,OAAA;IAAAyB,QAAA,gBACIzB,OAAA;MAAK0B,SAAS,EAAC,UAAU;MAAAD,QAAA,EACpBpB,QAAQ,CAACsB,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBACzB7B,OAAA;QAAiB0B,SAAS,EAAEE,OAAO,CAACjB,IAAI,KAAK,MAAM,GAAG,cAAc,GAAG,aAAc;QAAAc,QAAA,EAChFG,OAAO,CAAClB;MAAI,GADPmB,KAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eACNjC,OAAA;MAAMkC,QAAQ,EAAE3B,YAAa;MAAAkB,QAAA,gBACzBzB,OAAA;QACImC,IAAI,EAAC,QAAQ;QACbC,KAAK,EAAEjC,KAAM;QACbkC,QAAQ,EAAG7B,CAAC,IAAKJ,QAAQ,CAACI,CAAC,CAAC8B,MAAM,CAACF,KAAK,CAAE;QAC1CG,WAAW,EAAC;MAAe;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9B,CAAC,eACFjC,OAAA;QAAQmC,IAAI,EAAC,QAAQ;QAAAV,QAAA,EAAC;MAAI;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEd,CAAC;AAAC/B,EAAA,CAjDID,OAAO;AAAAuC,EAAA,GAAPvC,OAAO;AAmDb,eAAeA,OAAO;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}